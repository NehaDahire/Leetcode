You are given a 0-indexed array of positive integers nums.

In one operation, you can swap any two adjacent elements if they have the same number of set bits. You are allowed to do this operation any number of times (including zero).

Return true if you can sort the array, else return false
  
CODE:
class Solution {
public:
    bool canSortArray(vector<int>& nums) {
        int n=nums.size();
        vector<int> cnt(n);
        
        for(int i=0;i<n;i++){
            int y=0;
            int x=nums[i];
            while(x>0){
                if(x%2){
                y++;
                }
                x/=2;
            }
            cnt[i]=y;
        }
        int l=0;
        for(int i=0;i<n;i++){
            if(i!=0 && cnt[i]!=cnt[i-1]){
                sort(nums.begin()+l,nums.begin()+i);
                l=i;
            }
        }
        sort(nums.begin()+l,nums.end());
        for(int i=1;i<n;i++){
            if(nums[i]<nums[i-1]){
                return false;
            }
        }
        return true;
    }
};
